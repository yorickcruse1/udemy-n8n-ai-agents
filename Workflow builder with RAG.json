{
  "name": "Workflow builder with RAG",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "845ccaba-ce4c-428a-8e12-e27e1ef82247",
      "name": "When chat message received",
      "webhookId": "a55c1b4f-1dd4-40e7-9a99-a89902e2f5a9"
    },
    {
      "parameters": {
        "operation": "create",
        "workflowObject": "={{ $json.output[1].text }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        528,
        0
      ],
      "id": "1e08c30f-c78b-442f-9f70-4c4c409aa46d",
      "name": "n8n"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4b8c16e-6788-4c17-b643-94a3f0620860",
              "name": "Workflow Link",
              "value": "=https://HERE YOUR URL/workflow/{{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        688,
        0
      ],
      "id": "e197f532-dd73-4f39-a6b4-63275444627b",
      "name": "Workflow Link"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are an expert AI workflow developer specializing in building workflows for n8n as JSON. Your job is to translate a human’s natural language request into a fully functional n8n workflow JSON. It should be comprehensive, functional, and importable. It should have 100% valid JSON structure, node types, and connection methods.\n\n## Output\nYour output should only be the final JSON of the full workflow.\n\nYour output must start with a { and must end with a }.\n- Do not include anything before the { (such as ```json or any markdown formatting).\n- Do not include anything after the } (such as closing code blocks like ``` or explanations).\n\nYour output should be a pure JSON object that begins with { and ends with }, ready to be used as the body of a POST request.\n\nThe JSON must:\n- Be syntactically valid and complete\n- Include a `nodes` array with each node containing all required parameters\n- Include a `connections` object that correctly maps outputs to inputs\n- Start with a `trigger` node if one is required for the use case (e.g., Webhook, Schedule, etc.)\n- Contain descriptive names and parameter values relevant to the user request\n- Avoid placeholders unless no reasonable value can be inferred\n- Contain sticky notes that are explaining what's going on within each step and any credentials or connections that still need to be configured. The colors should vary throughout the workflow.\n\nBefore generating the JSON, analyze the request and:\n1. Break it down into logical automation steps\n2. Choose appropriate nodes based on the steps\n3. Properly connect the nodes to reflect execution order\n\nIf the request is ambiguous, make a best guess using standard automation logic.\n\nDo not return explanations, comments, or any output outside of the JSON markdown block.\n\nYou are expected to produce developer-grade output suitable for direct import into n8n.\n\n## API Submission Requirements\nTo automatically create a workflow using the n8n API, your generated JSON must include the following top-level fields in the final object:\n\n- `name` (string): A clear, descriptive workflow name.\n- `nodes` (array): The complete array of node objects used in the workflow.\n- `connections` (object): A valid map of node-to-node connections.\n- `settings` (object): Workflow-level settings (e.g. `saveManualExecutions`, `executionOrder`).\n- `staticData` (null or object): Set to `null` unless specific static data is needed.\n\nExample “settings” object:\n  \"settings\": {\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"saveDataSuccessExecution\": \"all\",\n    \"saveExecutionProgress\": true,\n    \"saveDataErrorExecution\": \"all\",\n    \"errorWorkflow\": \"\",\n    \"timezone\": \"America/New_York\"\n  }\n\n## n8n Documentation\nUse the Data from the user Prompt and surch the vectorstore for more Example."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        208,
        0
      ],
      "id": "9fb5eff8-cc30-4604-8657-bf269ea51d35",
      "name": "n8n Builder"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-opus-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Opus 4"
        },
        "options": {
          "maxTokensToSample": 8000,
          "thinking": true,
          "thinkingBudget": 3000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        128,
        224
      ],
      "id": "b4d94434-91ab-4213-af00-6467248d3d0b",
      "name": "Opus 4"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "use this tool to for more Examples about n8n Workflows",
        "pineconeIndex": {
          "__rl": true,
          "value": "yttest",
          "mode": "list",
          "cachedResultName": "yttest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        368,
        240
      ],
      "id": "2343b9d4-2fe6-4f84-a0e6-f89caf91e09f",
      "name": "Pinecone Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        304,
        384
      ],
      "id": "81c566dc-6618-4806-a00d-d1ed79ee13fa",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "yttest",
          "mode": "list",
          "cachedResultName": "yttest"
        },
        "embeddingBatchSize": 1000,
        "options": {
          "pineconeNamespace": "workflows"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        1120,
        0
      ],
      "id": "ad185705-2c5c-41cd-9092-71abe4c97a24",
      "name": "Pinecone Vector Store1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1104,
        224
      ],
      "id": "6f3854a1-b986-47e7-afd0-d6880e5f2969",
      "name": "Embeddings OpenAI1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        1312,
        208
      ],
      "id": "3b3b3eab-8ef2-4ee0-a7f6-5671c9e2bed9",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1WYgHKdo23qnloss_6XQKrONvlG64Gia4",
          "mode": "list",
          "cachedResultName": "n8n RAG Training",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1WYgHKdo23qnloss_6XQKrONvlG64Gia4"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        944,
        0
      ],
      "id": "06aa6dfe-28fd-4ef3-991f-8b07a5182ce5",
      "name": "Google Drive Trigger"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "n8n Builder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Workflow Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n Builder": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Opus 4": {
      "ai_languageModel": [
        [
          {
            "node": "n8n Builder",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "adc374d3-3754-4d80-87a6-4fb514997c9e",
  "meta": {
    "instanceId": "0ad1a48aad6ac888ca1b70b8d221936c2ca1bfe8a9dea5d9de5282a46ddffc3d"
  },
  "id": "oUoV6QMjTIwGrQSJ",
  "tags": []
}